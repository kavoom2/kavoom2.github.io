I"<h2 id="개요">개요</h2>
<p>스킬트리에는 선행스킬이라는 것이 있다. 선행 스킬이란 어떤 스킬을 배우려면 먼저 배워야 하는 스킬을 의미한다. 물론, 순서에 상관없이 배울 수 있는 스킬도 있다. 이 문제에서는 선행스킬 순서가 적인 문자열과 유저들이 만든 스킬트리를 담은 배열이 주어진다. 유저 스킬트리 순서대로 배웠을 때, 가능한 스킬트리의 총 갯수를 반환하는 함수를 작성하면 된다.</p>

<h2 id="조건">조건</h2>
<ul>
  <li>선행스킬 순서를 나타낸 문자열의 길이는 1 이상 26 이하이며, 중복되는 스킬은 없다.</li>
  <li>스킬트리를 나타낸 배열의 길이는 1 이상 20 이하이다.</li>
  <li>배열의 각 요소는 스킬트리를 나타낸 문자열이며, 길이는 2 이상 26 이하이다. 중복되는 스킬은 없다.</li>
</ul>

<h2 id="풀이">풀이</h2>
<p>다른사람의 풀이를 보다보면, 메소드를 이렇게 적절하게 사용할 수 있구나 하는 걸 실감한다. 다른 풀이에서는 배울수 있는 스킬트리인 경우 true를 반환하고, 아니면 false를 반환하도록 했다. 이를 Array.prototype.filter를 사용하여 true를 반환한 element의 갯수를 반환하게끔 사용하였다.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 1. 개인풀이</span>
<span class="kd">function</span> <span class="nx">solution</span><span class="p">(</span><span class="nx">skill</span><span class="p">,</span> <span class="nx">skill_trees</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nx">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">skill_tress</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="kd">const</span> <span class="nx">tree</span> <span class="o">=</span> <span class="nx">skill_trees</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
        <span class="kd">let</span> <span class="nx">learnableSkillIndex</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="kd">let</span> <span class="nx">isLearnable</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>

        <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">j</span> <span class="o">&lt;</span> <span class="nx">tree</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="kd">const</span> <span class="nx">currentSkill</span> <span class="o">=</span> <span class="nx">tree</span><span class="p">[</span><span class="nx">j</span><span class="p">];</span>
            <span class="c1">// 1. 선행스킬이 아니면 배울 수 있다.</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">skill</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">currentSkill</span><span class="p">)</span> <span class="o">===</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="k">continue</span><span class="p">;</span>
            <span class="c1">// 2. 선행스킬이면서 이전 스킬을 배우지 않으면 배울 수 없다.</span>
            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">skill</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">currentSkill</span><span class="p">)</span> <span class="o">&gt;</span> <span class="nx">learnableSkillIndex</span><span class="p">)</span> <span class="p">{</span>
                <span class="nx">isLearnable</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span> <span class="k">else</span> <span class="nx">learnableSkillIndex</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">if</span> <span class="p">(</span><span class="nx">isLearnable</span><span class="p">)</span> <span class="nx">answer</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
<span class="p">}</span>


<span class="c1">// 2. 프로그래머스 풀이</span>
<span class="kd">function</span> <span class="nx">solution</span><span class="p">(</span><span class="nx">skill</span><span class="p">,</span> <span class="nx">skill_trees</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">function</span> <span class="nx">isCorrect</span><span class="p">(</span><span class="nx">tree</span><span class="p">)</span> <span class="p">{</span>
        <span class="kd">const</span> <span class="nx">test</span> <span class="o">=</span> <span class="nx">skill</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">""</span><span class="p">);</span>
        <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">tree</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="c1">// 1. 선행스킬이 아니면 배운다.</span>
            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">skill</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="nx">tree</span><span class="p">[</span><span class="nx">i</span><span class="p">]))</span> <span class="k">continue</span><span class="p">;</span>
            <span class="c1">// 2. 선행스킬인 경우 먼저 배울 수 있는 스킬인지 확인하고 배운다.</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">tree</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">===</span> <span class="nx">test</span><span class="p">.</span><span class="nx">shift</span><span class="p">())</span> <span class="k">continue</span><span class="p">;</span>
            <span class="c1">// 3. 배울 수 없으면, 가능한 스킬트리가 아니므로 종료한다.</span>
            <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nx">skill_trees</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">isCorrect</span><span class="p">).</span><span class="nx">length</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
:ET