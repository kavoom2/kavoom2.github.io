I"m<h2 id="개요">개요</h2>
<p>수 많은 선수들이 마라톤에 참여했다. 단 “한 명”의 선수를 제외하고 모든 선수가 완주했다. 완주하지 못한 선수의 이름을 반환하는 함수를 작성하면 된다.</p>

<h2 id="조건">조건</h2>
<ul>
  <li>참여한 선수의 수는 1명 이상 100,000명 이하이다.</li>
  <li>항상 완주하지 못한 선수는 한 명뿐이다.</li>
  <li>참가자 중 동명이인이 있을 수 있다.</li>
</ul>

<h2 id="풀이">풀이</h2>
<p>설명을 잘 보고 이해해야 한다는 것을 다시 한번 느끼게 해준 문제다. 항상 완주하지 못한 선수가 한 명이라는 것을 인지하지 못하고, 여러명일 수 있다고 가정하고 풀었다. 아래처럼 풀 것도 없이 두 배열을 정렬해놓고 동일한 인덱스의 값을 대응시켰을 때, 다른 값을 반환하면 된다. 괜시리 토이에서 나온 방법을 써먹을 수 있어 좋아했다….</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 1. 개인풀이</span>
<span class="kd">function</span> <span class="nx">solution</span><span class="p">(</span><span class="nx">participant</span><span class="p">,</span> <span class="nx">completion</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">participant</span><span class="p">.</span><span class="nx">sort</span><span class="p">();</span>
    <span class="nx">completion</span><span class="p">.</span><span class="nx">sort</span><span class="p">();</span>
    <span class="kd">let</span> <span class="nx">answer</span> <span class="o">=</span> <span class="dl">""</span><span class="p">;</span>
    
    <span class="kd">function</span> <span class="nx">searchTarget</span><span class="p">(</span><span class="nx">target</span><span class="p">,</span> <span class="nx">fromIdx</span><span class="p">,</span> <span class="nx">completion</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="nx">fromIdx</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">completion</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">target</span> <span class="o">===</span> <span class="nx">completion</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span> <span class="k">return</span> <span class="nx">i</span><span class="p">;</span>
            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">target</span> <span class="o">&lt;</span> <span class="nx">completion</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span> <span class="p">{</span>
                <span class="nx">answer</span> <span class="o">=</span> <span class="nx">target</span><span class="p">;</span>
                <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="nx">answer</span> <span class="o">=</span> <span class="nx">target</span><span class="p">;</span>
        <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="kd">let</span> <span class="nx">fromIdx</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">j</span> <span class="o">&lt;</span> <span class="nx">participant</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="kd">const</span> <span class="nx">target</span> <span class="o">=</span> <span class="nx">participant</span><span class="p">[</span><span class="nx">j</span><span class="p">];</span>
        <span class="nx">fromIdx</span> <span class="o">=</span> <span class="nx">searchTarget</span><span class="p">(</span><span class="nx">target</span><span class="p">,</span> <span class="nx">fromIdx</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">completion</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="nx">fromIdx</span> <span class="o">===</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
:ET